/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "unoSsd1306Ascii_menu.h"

// Global variable declarations
const PROGMEM  ConnectorLocalInfo applicationInfo = { "unoSsd1306Ascii", "c518b993-949e-47a1-ac75-bd607c7c4e7a" };

SSD1306AsciiRenderer renderer(20, Arial14, System5x7);

// Global Menu Item declarations
ListRuntimeMenuItem menuIntList(9, 0, fnIntListRtCall, NULL);
RENDERING_CALLBACK_NAME_INVOKE(fnSubTestRGBRtCall, rgbAlphaItemRenderFn, "RGB", -1, NO_CALLBACK)
Rgb32MenuItem menuSubTestRGB(8, fnSubTestRGBRtCall, false, NULL);
RENDERING_CALLBACK_NAME_INVOKE(fnSubTestLgeNumRtCall, largeNumItemRenderFn, "LgeNum", -1, NO_CALLBACK)
EditableLargeNumberMenuItem menuSubTestLgeNum(fnSubTestLgeNumRtCall, 6, 6, 2, true, &menuSubTestRGB);
RENDERING_CALLBACK_NAME_INVOKE(fnSubTestRtCall, backSubItemRenderFn, "SubTest", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoSubTest = { "SubTest", 5, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSubTest(fnSubTestRtCall, &menuSubTestLgeNum);
SubMenuItem menuSubTest(&minfoSubTest, &menuBackSubTest, &menuIntList);
RENDERING_CALLBACK_NAME_INVOKE(fnTextRtCall, textItemRenderFn, "Text", -1, NO_CALLBACK)
TextMenuItem menuText(fnTextRtCall, 4, 5, &menuSubTest);
const PROGMEM BooleanMenuInfo minfoBool = { "Bool", 3, 0xffff, 1, NO_CALLBACK, NAMING_TRUE_FALSE };
BooleanMenuItem menuBool(&minfoBool, false, &menuText);
const PROGMEM FloatMenuInfo minfoFloat = { "Float", 2, 0xffff, 3, NO_CALLBACK };
FloatMenuItem menuFloat(&minfoFloat, &menuBool);
const PROGMEM AnalogMenuInfo minfoAnalog = { "Analog", 1, 0xffff, 255, NO_CALLBACK, 0, 1, "Unit" };
AnalogMenuItem menuAnalog(&minfoAnalog, 0, &menuFloat);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).

    // Code generated by plugins.
    renderer.setGraphicsDevice(&gfx);
    switches.init(internalDigitalIo(), SWITCHES_POLL_EVERYTHING, true);
    menuMgr.initForEncoder(&renderer, &menuAnalog, 2, 3, 4);
}

